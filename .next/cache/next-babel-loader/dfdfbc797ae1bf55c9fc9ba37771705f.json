{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Public\\\\Xampp\\\\htdocs\\\\fullstacklab\\\\pages\\\\App.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\n\nconst App = props => {\n  useEffect(() => {\n    if (props.isAuth === false) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n  if (!props.isAuth || props.forceCreate) return null;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"py-4 font-bold text-3xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Status de pessoas pr\\xF3ximas a voc\\xEA\"), __jsx(\"table\", {\n    className: \"table-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, __jsx(\"th\", {\n    className: \"px-4 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, \"ID\"), __jsx(\"th\", {\n    className: \"px-4 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, \"Status\"), __jsx(\"th\", {\n    className: \"px-4 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, \"Coordenadas\"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, props.checkins.map(checkin => {\n    return __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 28\n      }\n    }, checkin.id), __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 28\n      }\n    }, checkin.status), __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 28\n      }\n    }, JSON.stringify(checkin.coords)));\n  }))));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n  console.log(session);\n\n  if (session) {\n    const today = new Date();\n    const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n    const todaysCheckin = await db.collection('markers').doc(currentDate).collection('checks').doc(session.user.sub).get();\n    const todaysData = todaysCheckin.data();\n    let forceCreate = true;\n\n    if (todaysData) {\n      //pode ver os outros checkins\n      forceCreate = false;\n      const checkins = await db.collection('markers').doc(currentDate).collection('checks').near({\n        center: todaysData.coordinates,\n        radius: 1000\n      }).get();\n      const checkinsList = [];\n      checkins.docs.forEach(doc => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude\n          }\n        });\n      });\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList\n        }\n      };\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Public/Xampp/htdocs/fullstacklab/pages/App.js"],"names":["React","useEffect","auth0","router","db","App","props","isAuth","push","forceCreate","checkins","map","checkin","id","status","JSON","stringify","coords","getServerSideProps","req","res","session","getSession","console","log","today","Date","currentDate","getFullYear","getMonth","getDate","todaysCheckin","collection","doc","user","sub","get","todaysData","data","near","center","coordinates","radius","checkinsList","docs","forEach","lat","latitude","long","longitude"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,EAAT,QAAmB,WAAnB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACnBL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,KAAK,CAACC,MAAN,KAAiB,KAArB,EAA2B;AACvBJ,MAAAA,MAAM,CAACK,IAAP,CAAY,GAAZ;AACH,KAFD,MAEM,IAAGF,KAAK,CAACG,WAAT,EAAqB;AACvBN,MAAAA,MAAM,CAACK,IAAP,CAAY,gBAAZ;AACH;AACJ,GANQ,CAAT;AAQA,MAAI,CAACF,KAAK,CAACC,MAAP,IAAiBD,KAAK,CAACG,WAA3B,EAAwC,OAAO,IAAP;AAExC,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADJ,EAEI;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,CADA,CADJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEH,KAAK,CAACI,QAAN,CAAeC,GAAf,CAAmBC,OAAO,IAAI;AAC5B,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCA,OAAO,CAACC,EAA1C,CADH,EAEG;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCD,OAAO,CAACE,MAA1C,CAFH,EAGG;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCC,IAAI,CAACC,SAAL,CAAeJ,OAAO,CAACK,MAAvB,CAAlC,CAHH,CADJ;AAOH,GARC,CADF,CARJ,CAFJ,CADJ;AA0BH,CArCD;;AAuCA,eAAeZ,GAAf;AAEA,OAAO,eAAea,kBAAf,CAAmC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAnC,EAAiD;AACpD,QAAMC,OAAO,GAAG,MAAMnB,KAAK,CAACoB,UAAN,CAAiBH,GAAjB,CAAtB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;;AACA,MAAGA,OAAH,EAAW;AACP,UAAMI,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,UAAMC,WAAW,GAAGF,KAAK,CAACG,WAAN,KAAsB,GAAtB,GAA4BH,KAAK,CAACI,QAAN,EAA5B,GAA+C,GAA/C,GAAqDJ,KAAK,CAACK,OAAN,EAAzE;AACA,UAAMC,aAAa,GAAG,MAAM3B,EAAE,CACzB4B,UADuB,CACZ,SADY,EAEvBC,GAFuB,CAEnBN,WAFmB,EAGvBK,UAHuB,CAGZ,QAHY,EAIvBC,GAJuB,CAInBZ,OAAO,CAACa,IAAR,CAAaC,GAJM,EAKvBC,GALuB,EAA5B;AAOA,UAAMC,UAAU,GAAGN,aAAa,CAACO,IAAd,EAAnB;AACA,QAAI7B,WAAW,GAAG,IAAlB;;AACA,QAAI4B,UAAJ,EAAe;AACX;AACA5B,MAAAA,WAAW,GAAG,KAAd;AACA,YAAMC,QAAQ,GAAG,MAAMN,EAAE,CACpB4B,UADkB,CACP,SADO,EAElBC,GAFkB,CAEdN,WAFc,EAGlBK,UAHkB,CAGP,QAHO,EAIlBO,IAJkB,CAIb;AACFC,QAAAA,MAAM,EAAEH,UAAU,CAACI,WADjB;AAEFC,QAAAA,MAAM,EAAE;AAFN,OAJa,EAQtBN,GARsB,EAAvB;AASA,YAAMO,YAAY,GAAG,EAArB;AACAjC,MAAAA,QAAQ,CAACkC,IAAT,CAAcC,OAAd,CAAsBZ,GAAG,IAAI;AACzBU,QAAAA,YAAY,CAACnC,IAAb,CAAkB;AACdK,UAAAA,EAAE,EAAEoB,GAAG,CAACpB,EADM;AAEdC,UAAAA,MAAM,EAAEmB,GAAG,CAACK,IAAJ,GAAWxB,MAFL;AAGdG,UAAAA,MAAM,EAAE;AACJ6B,YAAAA,GAAG,EAAEb,GAAG,CAACK,IAAJ,GAAWG,WAAX,CAAuBM,QADxB;AAEJC,YAAAA,IAAI,EAAEf,GAAG,CAACK,IAAJ,GAAWG,WAAX,CAAuBQ;AAFzB;AAHM,SAAlB;AAQH,OATD;AAUA,aAAO;AACH3C,QAAAA,KAAK,EAAE;AACHC,UAAAA,MAAM,EAAE,IADL;AAEH2B,UAAAA,IAAI,EAAEb,OAAO,CAACa,IAFX;AAGHzB,UAAAA,WAAW,EAAE,KAHV;AAIHC,UAAAA,QAAQ,EAAEiC;AAJP;AADJ,OAAP;AAQH;;AAED,WAAO;AACHrC,MAAAA,KAAK,EAAE;AACHC,QAAAA,MAAM,EAAE,IADL;AAEH2B,QAAAA,IAAI,EAAEb,OAAO,CAACa,IAFX;AAGHzB,QAAAA;AAHG;AADJ,KAAP;AAOH;;AACD,SAAO;AACHH,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE,KADL;AAEH2B,MAAAA,IAAI,EAAE;AAFH;AADJ,GAAP;AAMH","sourcesContent":["import React, { useEffect } from 'react'\r\nimport auth0 from '../lib/auth0'\r\nimport router from 'next/router'\r\nimport { db } from '../lib/db'\r\n\r\nconst App = (props) => {\r\n    useEffect(() => {\r\n        if( props.isAuth === false){            \r\n            router.push('/')\r\n        }else if(props.forceCreate){\r\n            router.push('/create-status')\r\n        }\r\n    })\r\n\r\n    if (!props.isAuth || props.forceCreate) return null;\r\n\r\n    return (\r\n        <div>               \r\n            <h1 className='py-4 font-bold text-3xl'>Status de pessoas próximas a você</h1>\r\n            <table className='table-auto'>\r\n                <thead>\r\n                <tr>\r\n                    <th className='px-4 py-2'>ID</th>\r\n                    <th className='px-4 py-2'>Status</th>\r\n                    <th className='px-4 py-2'>Coordenadas</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                { props.checkins.map(checkin => {\r\n                    return (\r\n                        <tr>\r\n                           <td className='border px-4 py-2'>{checkin.id}</td> \r\n                           <td className='border px-4 py-2'>{checkin.status}</td> \r\n                           <td className='border px-4 py-2'>{JSON.stringify(checkin.coords)}</td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            </table>\r\n            {/*<pre>{JSON.stringify(props, null, 2)}</pre>*/}\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default App\r\n\r\nexport async function getServerSideProps ({ req, res }) {\r\n    const session = await auth0.getSession(req)\r\n    console.log(session)\r\n    if(session){\r\n        const today = new Date()        \r\n        const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate()\r\n        const todaysCheckin = await db\r\n            .collection('markers')\r\n            .doc(currentDate)\r\n            .collection('checks')\r\n            .doc(session.user.sub)\r\n            .get()\r\n\r\n        const todaysData = todaysCheckin.data()\r\n        let forceCreate = true\r\n        if (todaysData){\r\n            //pode ver os outros checkins\r\n            forceCreate = false\r\n            const checkins = await db\r\n                .collection('markers')\r\n                .doc(currentDate)\r\n                .collection('checks')\r\n                .near({\r\n                    center: todaysData.coordinates,\r\n                    radius: 1000\r\n            })\r\n            .get()\r\n            const checkinsList = []\r\n            checkins.docs.forEach(doc => {\r\n                checkinsList.push({                    \r\n                    id: doc.id,\r\n                    status: doc.data().status,\r\n                    coords: {\r\n                        lat: doc.data().coordinates.latitude,\r\n                        long: doc.data().coordinates.longitude\r\n                    }\r\n                })\r\n            })\r\n            return {\r\n                props: {\r\n                    isAuth: true,\r\n                    user: session.user,\r\n                    forceCreate: false,\r\n                    checkins: checkinsList\r\n                }\r\n            }\r\n        }        \r\n\r\n        return {\r\n            props: {\r\n                isAuth: true,\r\n                user: session.user,\r\n                forceCreate\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        props: {\r\n            isAuth: false,\r\n            user: {}\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}