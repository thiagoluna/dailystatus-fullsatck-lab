{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Public\\\\Xampp\\\\htdocs\\\\fullstacklab\\\\pages\\\\create-status.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nvar CreateStatus = function CreateStatus() {\n  var _useState = useState({\n    status: 'bem',\n    coords: {\n      lat: null,\n      \"long\": null\n    }\n  }),\n      dados = _useState[0],\n      setDados = _useState[1];\n\n  var getMyLocation = function getMyLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        //console.log(position.coords)\n        setDados(function (old) {\n          return _objectSpread({}, old, {\n            coords: {\n              lat: position.coords.latitude,\n              \"long\": position.coords.longitude\n            }\n          });\n        });\n      });\n    }\n  };\n\n  var onStatusCnahge = function onStatusCnahge(evt) {\n    var value = evt.target.value;\n    setDados(function (old) {\n      return _objectSpread({}, old, {\n        status: value\n      });\n    });\n  };\n\n  var save = function save() {\n    return _regeneratorRuntime.async(function save$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.post('/api/save-status', dados));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Selecione a op\\xE7\\xE3o que melhor define sua situa\\xE7\\xE3o hoje:\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 76\n    }\n  }), __jsx(\"label\", {\n    className: \"block\",\n    onClick: onStatusCnahge,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"status\",\n    value: \"bem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), \" Estou bem e sem sintomas\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }), __jsx(\"label\", {\n    className: \"block\",\n    onClick: onStatusCnahge,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"status\",\n    value: \"gripe\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), \" Estou com sintomas de gripe\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }), __jsx(\"label\", {\n    className: \"block\",\n    onClick: onStatusCnahge,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"status\",\n    value: \"covid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), \" Estou com sintomas da covid\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }), __jsx(\"button\", {\n    onClick: getMyLocation,\n    className: \"py-4 px-2 bg-pink-800 font-bold shadow-xl hover:shadow rounded w-1/4 text-center mx-auto text-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Informar minha localiza\\xE7\\xE3o\"), \" \\xA0\\xA0\", __jsx(\"button\", {\n    onClick: save,\n    className: \"py-4 px-2 bg-pink-800 font-bold shadow-xl hover:shadow rounded w-1/2 text-center mx-auto text-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Salvar\"), \" \\xA0\\xA0\");\n};\n\nexport var __N_SSP = true;\nexport default CreateStatus;","map":{"version":3,"sources":["C:/Users/Public/Xampp/htdocs/fullstacklab/pages/create-status.js"],"names":["React","useState","axios","CreateStatus","status","coords","lat","dados","setDados","getMyLocation","navigator","geolocation","getCurrentPosition","position","old","latitude","longitude","onStatusCnahge","evt","value","target","save","post"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport auth0 from '../lib/auth0'\r\nimport axios from 'axios'\r\n\r\nconst CreateStatus = () => {\r\n    const [dados, setDados] = useState({\r\n        status: 'bem',\r\n        coords: {\r\n            lat: null,\r\n            long: null\r\n        }\r\n    })\r\n    const getMyLocation = () => {\r\n        if(navigator.geolocation){\r\n            navigator.geolocation.getCurrentPosition(position => {\r\n                //console.log(position.coords)\r\n                setDados(old => {\r\n                    return {\r\n                        ...old,\r\n                        coords: {\r\n                            lat: position.coords.latitude,\r\n                            long: position.coords.longitude\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n    const onStatusCnahge = evt => {\r\n        const value = evt.target.value\r\n        setDados(old => {\r\n            return {\r\n                ...old,\r\n                status: value\r\n            }\r\n        })\r\n    }\r\n    const save = async() => {\r\n        await axios.post('/api/save-status', dados)\r\n    }\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <h1>Selecione a opção que melhor define sua situação hoje:</h1><br/>\r\n            <label className='block' onClick={onStatusCnahge}>\r\n                <input type='radio' name='status' value='bem'></input> Estou bem e sem sintomas\r\n            </label><br/>\r\n            <label className='block' onClick={onStatusCnahge}>\r\n                <input type='radio' name='status' value='gripe'></input> Estou com sintomas de gripe\r\n            </label><br/>\r\n            <label className='block' onClick={onStatusCnahge}>\r\n                <input type='radio' name='status' value='covid'></input> Estou com sintomas da covid\r\n            </label><br/>\r\n            {/*JSON.stringify(dados)*/}\r\n            <button onClick={getMyLocation} className='py-4 px-2 bg-pink-800 font-bold shadow-xl hover:shadow rounded w-1/4 text-center mx-auto text-white'>\r\n                Informar minha localização\r\n            </button> &nbsp;&nbsp;\r\n            <button onClick={save} className='py-4 px-2 bg-pink-800 font-bold shadow-xl hover:shadow rounded w-1/2 text-center mx-auto text-white'>\r\n                Salvar\r\n            </button> &nbsp;&nbsp;            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default CreateStatus\r\n\r\nexport async function getServerSideProps ({ req, res }) {\r\n    const session = await auth0.getSession(req)    \r\n    if(session){\r\n        return {\r\n            props: {\r\n                isAuth: true,\r\n                user: session.user,                \r\n            }\r\n        }\r\n    }        \r\n    return {\r\n        props: {\r\n            isAuth: false,\r\n            user: {}\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}