{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Public\\\\Xampp\\\\htdocs\\\\fullstacklab\\\\pages\\\\App.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {//return null\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"App\"), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, props.checkins.map(checkin => {\n    return __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 24\n      }\n    }, checkin.id);\n  })), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, JSON.stringify(props, null, 2)));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n  console.log(session);\n\n  if (session) {\n    const today = new Date();\n    const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n    const todaysCheckin = await db.collection('makers').doc(currentDate).collection('check').doc(session.user.sub).get();\n    const todaysData = todaysCheckin.data();\n    let forceCreate = true;\n\n    if (todaysData) {\n      //pode ver os outros checkins\n      forceCreate = false;\n      const checkins = await db.collection('makers').doc(currentDate).collection('check').near({\n        center: todaysData.coordinates,\n        redius: 1000\n      }).get();\n      const checkinsList = [];\n      checkins.docs.forEach(doc => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude\n          }\n        });\n      });\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList\n        }\n      };\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate: true\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Public/Xampp/htdocs/fullstacklab/pages/App.js"],"names":["React","useEffect","auth0","router","db","App","props","isAuth","push","forceCreate","checkins","map","checkin","id","JSON","stringify","getServerSideProps","req","res","session","getSession","console","log","today","Date","currentDate","getFullYear","getMonth","getDate","todaysCheckin","collection","doc","user","sub","get","todaysData","data","near","center","coordinates","redius","checkinsList","docs","forEach","status","coords","lat","latitude","long","longitude"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport auth0 from '../lib/auth0'\r\nimport router from 'next/router'\r\nimport { db } from '../lib/db'\r\n\r\nconst App = (props) => {\r\n    useEffect(() => {\r\n        if(!props.isAuth){\r\n            router.push('/')\r\n        }else if(props.forceCreate){\r\n            router.push('/create-status')\r\n        }\r\n    })\r\n    if(!props.isAuth || props.forceCreate) {\r\n        //return null\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>App</h1>   \r\n            <table>\r\n            { props.checkins.map(checkin => {\r\n                return <tr>{checkin.id}</tr>\r\n            })}\r\n            </table>         \r\n            <pre>{JSON.stringify(props, null, 2)}</pre>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default App\r\n\r\nexport async function getServerSideProps ({ req, res }) {\r\n    const session = await auth0.getSession(req)\r\n    console.log(session)\r\n    if(session){\r\n        const today = new Date()        \r\n        const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate()\r\n        const todaysCheckin = await db\r\n            .collection('makers')\r\n            .doc(currentDate)\r\n            .collection('check')\r\n            .doc(session.user.sub)\r\n            .get()\r\n\r\n        const todaysData = todaysCheckin.data()\r\n        let forceCreate = true\r\n        if (todaysData){\r\n            //pode ver os outros checkins\r\n            forceCreate = false\r\n            const checkins = await db\r\n                .collection('makers')\r\n                .doc(currentDate)\r\n                .collection('check')\r\n                .near({\r\n                    center: todaysData.coordinates,\r\n                    redius: 1000\r\n            })\r\n            .get()\r\n            const checkinsList = []\r\n            checkins.docs.forEach(doc => {\r\n                checkinsList.push({                    \r\n                    id: doc.id,\r\n                    status: doc.data().status,\r\n                    coords: {\r\n                        lat: doc.data().coordinates.latitude,\r\n                        long: doc.data().coordinates.longitude\r\n                    }\r\n                })\r\n            })\r\n            return {\r\n                props: {\r\n                    isAuth: true,\r\n                    user: session.user,\r\n                    forceCreate: false,\r\n                    checkins: checkinsList\r\n                }\r\n            }\r\n        }        \r\n\r\n        return {\r\n            props: {\r\n                isAuth: true,\r\n                user: session.user,\r\n                forceCreate: true\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        props: {\r\n            isAuth: false,\r\n            user: {}\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}