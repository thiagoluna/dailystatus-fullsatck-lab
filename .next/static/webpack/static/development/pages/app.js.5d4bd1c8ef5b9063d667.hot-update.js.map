{"version":3,"file":"static/webpack/static\\development\\pages\\app.js.5d4bd1c8ef5b9063d667.hot-update.js","sources":["webpack:///./pages/app.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport auth0 from '../lib/auth0'\r\nimport router from 'next/router'\r\nimport { db } from '../lib/db'\r\nimport { distance } from '../lib/geo'\r\n\r\nconst App = (props) => {\r\n    useEffect(() => {\r\n        if(!props.isAuth){            \r\n            router.push('/')\r\n        }else if(props.forceCreate){\r\n            router.push('/create-status')\r\n        }\r\n    })\r\n\r\n    if (!props.isAuth || props.forceCreate) return null;\r\n\r\n    return (\r\n        <div className='row ml-5'>               \r\n            <h1 className='py-4 font-bold text-3xl'>Status de pessoas próximas a você</h1>\r\n            A tabela abaixo apresenta a relação de todas as pessoas que informaram<br/>\r\n            como estão se sentindo hoje e que estão no raio de 1 km de distância de você.<br/><br/>\r\n            <table className='table-auto'>\r\n                <thead>\r\n                <tr>\r\n                    <th className='px-4 py-2'>ID</th>\r\n                    <th className='px-4 py-2'>Status</th>\r\n                    <th className='px-4 py-2'>Distância de você</th>\r\n                    <th className='px-4 py-2'>Coordenadas</th>                    \r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                { props.checkins.map(checkin => {\r\n                    return (\r\n                        <tr>\r\n                           <td className='border px-4 py-2'>{checkin.id === props.user.sub && 'Esse sou eu'}</td> \r\n                           <td className='border px-4 py-2'>\r\n                            {checkin.status === 'bem' && 'Está bem e sem sintomas'}\r\n                            {checkin.status === 'gripe' && 'Está com sintomas de gripe'}\r\n                            {checkin.status === 'covid' && 'Está com sintomas da covid-19'}\r\n                           </td> \r\n                           <td className='border px-4 py-2'>{checkin.distance} km</td> \r\n                           <td className='border px-4 py-2'>{JSON.stringify(checkin.coords.lat)}</td>                           \r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            </table>\r\n            {/*<pre>{JSON.stringify(props, null, 2)}</pre>*/}\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default App\r\n\r\nexport async function getServerSideProps ({ req, res }) {\r\n    const session = await auth0.getSession(req)\r\n    console.log(session)\r\n    if(session){\r\n        const today = new Date()        \r\n        const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate()\r\n        const todaysCheckin = await db\r\n            .collection('markers')\r\n            .doc(currentDate)\r\n            .collection('checks')\r\n            .doc(session.user.sub)\r\n            .get()\r\n\r\n        const todaysData = todaysCheckin.data()\r\n        let forceCreate = true\r\n        if (todaysData){\r\n            //pode ver os outros checkins\r\n            forceCreate = false\r\n            const checkins = await db\r\n                .collection('markers')\r\n                .doc(currentDate)\r\n                .collection('checks')\r\n                .near({\r\n                    center: todaysData.coordinates,\r\n                    radius: 1000\r\n            })\r\n            .get()\r\n            const checkinsList = []\r\n            checkins.docs.forEach(doc => {\r\n                checkinsList.push({                    \r\n                    id: doc.id,\r\n                    status: doc.data().status,\r\n                    coords: {\r\n                        lat: doc.data().coordinates.latitude,\r\n                        long: doc.data().coordinates.longitude\r\n                    },\r\n                    distance: distance(\r\n                        todaysData.coordinates.latitude, \r\n                        todaysData.coordinates.longitude, \r\n                        doc.data().coordinates.latitude,\r\n                        doc.data().coordinates.longitude\r\n                    ).toFixed(2)\r\n                })\r\n            })\r\n            return {\r\n                props: {\r\n                    isAuth: true,\r\n                    user: session.user,\r\n                    forceCreate: false,\r\n                    checkins: checkinsList\r\n                }\r\n            }\r\n        }        \r\n\r\n        return {\r\n            props: {\r\n                isAuth: true,\r\n                user: session.user,\r\n                forceCreate\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        props: {\r\n            isAuth: false,\r\n            user: {}\r\n        }\r\n    }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAMA;AACA;;AACA;;;;A","sourceRoot":""}